name: test ci/cd 

on:
  push:
    branches:
      - main
  pull_request:



env:
  CI_PROJECT_PATH: "ReightI/test-nucleusj-ci-cd"
  API_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  VERSION: "2.0.1"

# ------------------------- Compile ----------------------------------------
# Compile the Maven project with all it's dependencies thanks to maven-assembly-plugin.


jobs:
  compile:
    runs-on : ubuntu-latest
    steps :
    
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          
      - name : compile
        run: mvn  -f ~/pom.xml  versions:set -DnewVersion=$VERSION
             mvn clean package         
      - name: target
        uses: actions/upload-artifact@v3
        with:
          path: target

# ------------------------- Deploy ----------------------------------------
# Deploy the Maven artifacts generated by "Compile" stage to Gitlab Maven repository.

  deploy:
    runs-on : ubuntu-latest
    steps :
      - name: deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')}}
        run: mvn deploy:deploy-file -Durl=https://gitlab.com/api/v4/projects/19044962/packages/maven/ -DrepositoryId=gitlab-maven -Dfile=target/NucleusJ_2-$VERSION.jar -DgroupId=burp -DartifactId=NucleusJ_2 -Dversion=$VERSION -Dpackaging=jar -DgeneratePom=false -DuniqueVersion=true -s settings.xml
  
# ------------------------- Release ----------------------------------------
# Do a gitlab release with "release-cli" tool.
# Assets are a JAR file deployed at https://gitlab.com/api/v4/projects/19044962/packages/maven

  release_branch:
   runs-on : ubuntu-latest
   steps :
      - name: release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')}}
        run : mvn release-cli create --name "v$VERSION" --description "new release" --tag-name "v$VERSION" --ref $CI_COMMIT_SHA --assets-links-name ".jar" --assets-links-url "https://gitlab.com/api/v4/projects/19044962/packages/maven/burp/NucleusJ_2/$VERSION/NucleusJ_2-$VERSION.jar"


        
    

  
